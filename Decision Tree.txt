from sklearn import tree,

%%time 

#Hyperparameters 
Criterion_list = ['gini', 'entropy']
D_list = [1,2,3,4,5]

#performing 10 fold Cross Validation
model = tree.DecisionTreeClassifier()
param_grid = {'max_depth': D_list, 'criterion': Criterion_list}
#find optimal combination of hyperaramaters
grid_search = GridSearchCV(estimator=model,param_grid=param_grid,cv=10)
#this does cv and also train using best hyperparamater
grid_search.fit(X_train,Y_train)

#Find optimal hyper-paramater
best_max_depth = grid_search.best_params_["max_depth"]
best_criterion =  grid_search.best_params_["criterion"]

##trainng error and cv error
#cross_val_errors = (1- grid_search.cv_results_['mean_test_score']).reshape(2,5)
cross_val_errors = (1- grid_search.cv_results_['mean_test_score'])
train_error = sum(grid_search.best_estimator_.predict(X_train) != Y_train)/(len(Y_train))

#test and optain testing accuracy
test_error = sum(grid_search.best_estimator_.predict(X_test) != Y_test)/(len(Y_test))